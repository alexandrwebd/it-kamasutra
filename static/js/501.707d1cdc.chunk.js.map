{"version":3,"file":"static/js/501.707d1cdc.chunk.js","mappings":"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","sources":["webpack://react-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"dialog\":\"Dialogs_dialog__htSTl\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\",\"messageItem2\":\"Dialogs_messageItem2__x-tZs\",\"dialogImg\":\"Dialogs_dialogImg__y4Xpm\"};","import classes from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport avatar from \"./avatar.jpg\";\n\n\n\nconst DialogItem = (props) => {\n    const path = '/dialogs/' + props.id\n    return (\n        <div className={classes.dialog + ' ' + classes.active}>\n            <div className={classes.dialogImg}>\n                <img src={avatar} alt=\"\" />\n            </div>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem\n","import classes from \"../Dialogs.module.css\";\n\n\nconst Message = (props) => {\n    return (\n        <div className={classes.message}>{props.message}</div>\n    )\n}\n\n\n\nexport default Message\n","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\n\nconst maxLength50 = maxLengthCreator(50)\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field name={'newMessageBody'} component={Textarea} placeholder='Enter your message'> validate={[required,maxLength50]} </Field>\n            <button>Send</button>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    // даем уникальное имя нашей форме\n    form: 'dialogAddMessageForm'\n})(AddMessageForm)","import React from 'react'\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport AddMessageForm from \"./AddMessageForm\";\nconst Dialogs = (props) => {\n    const state = props.dialogsPage\n\n    const dialogsElements = state.dialogsData.map(item => <DialogItem key={item.id} name={item.name} id={item.id} />)\n    const messagesElements = state.messagesData.map(item => <Message key={item.id} message={item.message} />)\n    const newMessageBody = state.messages.map(item => <Message key={item.id} message={item.message} />)\n\n    const addNewMessage = (values) =>{\n        props.onSendMessageClick(values.newMessageBody)\n    }\n\n\n    // if (!props.isAuth) return <Navigate to={\"/login\"} />\n            return (\n                <div className={classes.dialogs}>\n                    <div className={classes.dialogsItems }>\n                        {\n                            dialogsElements\n                        }\n                    </div>\n                    <div className={classes.messages}>\n                        <div className={classes.messageItem}>\n                            {\n                                messagesElements\n                            }\n                        </div>\n                        <div className={classes.messageItem2}>\n                            {\n                                newMessageBody\n                            }\n                        </div>\n\n                    </div>\n\n                    <AddMessageForm onSubmit={addNewMessage} />\n\n                </div>\n            )\n\n}\n\nexport default Dialogs\n","import React from 'react'\nimport {addDialogActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSendMessageClick: (newMessageBody) => {\n            dispatch(addDialogActionCreator(newMessageBody))\n        }\n    }\n}\n\n\n\n// HOC\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs)\n","import {Navigate} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}"],"names":["props","path","id","_jsxs","className","classes","children","_jsx","src","avatar","alt","NavLink","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","required","state","dialogsPage","dialogsElements","dialogsData","map","item","DialogItem","messagesElements","messagesData","Message","newMessageBody","messages","AddMessageForm","values","onSendMessageClick","compose","connect","dispatch","addDialogActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React"],"sourceRoot":""}